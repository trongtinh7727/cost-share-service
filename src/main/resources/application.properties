spring.jpa.hibernate.ddl-auto=update
spring.application.name=cost-share-service

# PostgreSQL configuration
spring.datasource.url=jdbc:postgresql://158.178.235.13:5432/cost-share
spring.datasource.username=root
spring.datasource.password=admin
spring.jpa.show-sql=true

# Optional Hibernate dialect for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

security.jwt.secret-key=bca71aadba28172c9ec55e0daa70e5ffbd9e1be11c2b809b9aed492be828ee6a
security.jwt.expiration-time=360000000
otp.expiration.minutes=5

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=costshare.iiex@gmail.com
spring.mail.password=pngrorchcpcxheed
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.google.redirect-uri=http://costshare.ddns.net:8080/api/auth/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/userinfo/v2/me

spring.security.oauth2.client.provider.google.user-name-attribute=id

# Optional: Configure your base URL
# This is your application's root URL (localhost for local development, or your domain in production)
# Example:
# server.base-url=http://localhost:8080
