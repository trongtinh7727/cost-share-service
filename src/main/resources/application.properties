app.environment=${APP_ENVIRONMENT:development}

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/cost-share
spring.datasource.username=root
spring.datasource.password=admin
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

otp.expiration.minutes=5

# Redis Configuration
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}

# JWT Configuration
security.jwt.secret-key=${JWT_SECRET_KEY:bca71aadba28172c9ec55e0daa70e5ffbd9e1be11c2b809b9aed492be828ee6a}
security.jwt.expiration-time=${JWT_EXPIRATION_TIME:360000000}

# Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME:costshare.iiex@gmail.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:pngrorchcpcxheed}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/auth/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/userinfo/v2/me

spring.security.oauth2.client.provider.google.user-name-attribute=id
