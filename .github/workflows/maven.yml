name: Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    name: build and deploy spring-api
    runs-on: ubuntu-20.04
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: cost-share
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Wait for MySQL to be ready
        run: |
          retries=10
          until mysqladmin ping -h"localhost" --silent || [ $retries -eq 0 ]; do
            echo "Waiting for database connection..."
            retries=$((retries - 1))
            sleep 5
          done
          if [ $retries -eq 0 ]; then
            echo "MySQL service failed to start within the expected time."
            exit 1
          fi

      - name: unit tests
        run: mvn -B test --file pom.xml

      - name: build the app
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: build the docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:latest

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: push the docker image to docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:latest
